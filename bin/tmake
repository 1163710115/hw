#!/usr/bin/env perl

##
## build tree
##
use Getopt::Long;
use Data::Dumper;
use YAML qw(LoadFile);
use IO::Tee;

my $MAKE = "make";

#=============================
## Options
#=============================
my @build = (vmod);
my $opt_m=""; # optins passed to make
my $log = "build.log";
my $run = 1;
my $project;
GetOptions (
             "help|h" => sub {usage(); exit 0},
             "build|b=s" => \@build,
             "opt_m=s"   => \$opt_m,
             "log=s"     => \$log,
             "project=s" => \$project,
             "run!"      => \$run,
           ) or die "Unrecognized options @ARGV";

print Dumper(\@build);
#=============================
## Global Variables
#=============================
my $log_tmp = $log.".tmp";


system ("rm -rf $log");
system ("touch  $log");

my @projects = $project ? ($project) : get_projects("tree.make");
foreach my $project (@projects) {
    my $tree = LoadFile("etc/build.config");
    my $done;
    #print Dumper($tree);
    while (%$tree) {
        my @keys = keys %$tree;
        
        my $key="unknown";
        foreach my $i (0..$#keys) {
            #print "key$i=$keys[$i]\n";
            if (grep {$keys[$i] =~ /^$_/} @build) {
                $key = $keys[$i];
                #print "find:key=$key\n";
                last;
            }
        }
        # all -build target is built;
        #print "key=$key\n";
        last if ($key eq "unknown");

        #print Dumper($tree);

        
        my $leaf = find_any_leaf($tree,$key,$done);
    
        print "leaf=$leaf\n";
    
        foreach my $sandbox (@{$tree->{$leaf}{sandbox}}) {
                system("$MAKE -C $sandbox PROJECT=$project $opt_m | tee $log_tmp")==0 or die "$sandbox build fail: $?" if $run;
                system ("cat $log_tmp >> $log") if $run;
        }
        
        $done->{$leaf} = 1;
        delete $tree->{$leaf};
    }
}
system ("rm -rf $log_tmp");

print "logfile: $log\n";
my $tee = IO::Tee->new(\*STDOUT, $log);
print $tee "="x46,"\n";
print $tee "="x18,"BUILD PASS","="x18,"\n";
print $tee "="x46,"\n";

sub find_any_leaf {
    my $tree = shift;
    my $key = shift;
    my $done = shift;

    my $leaf;
    if (exists $tree->{$key}{dependencies}) {
        #print "find_any_leaf:key=$key\n";
        foreach my $dep (@{$tree->{$key}{dependencies}}) {
            #print "find_any_leaf:dep=$dep\n";
            next if exists $done->{$dep};
            return find_any_leaf($tree,$dep,$done);
        }
    }
    return $key;
}

sub get_projects {
    my $file = shift;

    my @projects;
    open my $fh,"<",$file or die;
    while (my $line = <$fh>) {
        chomp $line;
        next unless $line =~ /^\s*PROJECTS/;
        my $str = $1 if $line =~ /=(.*)/;
        @projects = split(' ',$str);
    }
    close $fh;

    #print Dumper(\@projects);
    return @projects;
}

sub usage()
{
    print
    	"Usage: tmake\n",
}
